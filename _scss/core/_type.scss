// ==== TYPOGRAPHY ==== //

// Define all global font styles here.

// 1. Variables
// 2. font()
// 3. Global styles

// 1. Variables //

$sans: "freight-sans-pro", "Freight Sans Pro", "PT Sans", Arial, sans-serif;
$sans-normal: 500;
$sans-semibold: 600;
$sans-bold: 700;

$serif: "freight-text-pro", "Freight Text Pro", "Times New Roman", Times, serif;
$serif-normal: 400;
$serif-bold: 700;

$code: "Courier New", Courier, monospace;

$ms-base: 1rem;
$ms-ratio: 1.25;

$typi: (null: (12px, 1.75), x-small: 16px, medium: 20px, x-large: 24px);



@mixin underline($bg-color: white, $bg-shade: base, $txt-color: $primary) {
  $selection-color: palette(blue, lighter);

  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 90%, 100% 90%, 0% 90%;
  background-size: .05em 1px, .05em 1px, 1px 1px;
  color: palette($txt-color);
  text-shadow: .03em 0 palette($bg-color, $bg-shade), -.03em 0 palette($bg-color, $bg-shade), 0 .03em palette($bg-color, $bg-shade), 0 -.03em palette($bg-color, $bg-shade), .06em 0 palette($bg-color, $bg-shade), -.06em 0 palette($bg-color, $bg-shade), .09em 0 palette($bg-color, $bg-shade), -.09em 0 palette($bg-color, $bg-shade), .12em 0 palette($bg-color, $bg-shade), -.12em 0 palette($bg-color, $bg-shade), .15em 0 palette($bg-color, $bg-shade), -.15em 0 palette($bg-color, $bg-shade);

  &:hover,
  &:focus {
    background-image: linear-gradient(palette($bg-color, $bg-shade), palette($bg-color, $bg-shade)), linear-gradient(palette($bg-color, $bg-shade), palette($bg-color, $bg-shade)), linear-gradient(palette($txt-color), palette($txt-color));

    &::selection {
      background: $selection-color;
      text-shadow: .03em 0 $selection-color, -.03em 0 $selection-color, 0 .03em $selection-color, 0 -.03em $selection-color, .06em 0 $selection-color, -.06em 0 $selection-color, .09em 0 $selection-color, -.09em 0 $selection-color, .12em 0 $selection-color, -.12em 0 $selection-color, .15em 0 $selection-color, -.15em 0 $selection-color;
    }

    &::before,
    &::after,
    *,
    *::before,
    *::after {
      text-shadow: none;
    }
  }
}

// 2. font() //

// The font() function accepts a style parameter.
// It is intended to promote consistency in the typography,
// therefore the number of styles should be kept to a minimum.
// Attributes which change between instances should not be defined here (e.g. color).

@mixin font($style: null) {
  a {
    @include underline();
  }

  @if $style == null {
    @warn "Mixin font() received no input! Please provide a style.";

    color: red;
    font-size: ms(10);
  }
  @else if $style == "title" {
    color: palette(gray, dark);
    font-size: ms(4);
    font-weight: $sans-bold;
    line-height: 1.4;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
    }
  }
  @else if $style == "header1" {
    margin-top: .15rem;
    margin-bottom: .5rem;
    clear: right;
    font-size: ms(3);
    font-weight: $sans-bold;
    line-height: 1.25;

    &::after {
      display: block;
      width: 4rem;
      height: 0.33rem;
      margin-top: .5rem;
      background-color: palette($primary);
      content: "";
    }
  }
  @else if $style == "header2" {
    display: inline;
    margin-top: .5rem;
    margin-bottom: .25rem;
    font-size: ms(2);
    font-weight: $sans-bold;
    line-height: 1.25;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
    }
  }
  @else if $style == "header3" {
    display: inline;
    margin-top: .5rem;
    margin-bottom: .25rem;
    color: palette(gray, dark);
    font-size: ms(1);
    font-weight: $sans-bold;
    line-height: 1.25;
  }
  @else if $style == "body" {
    &.-large {
      font-size: ms(1);
    }

    a {
      font-weight: $sans-semibold;
    }
  }
  @else if $style == "quote" {
    color: palette(gray, dark);
    font-family: $serif;
    font-size: ms(5);
    font-weight: $serif-normal;
    line-height: 1.4;

    a {
      background-size: .05em 2px, .05em 2px, 2px 2px;
      font-weight: $serif-bold;
    }
  }
  @else {
    @warn "Mixin font() received invalid input! This style does not exist.";

    color: red;
    font-size: ms(10);
  }
}

// 3. Global styles //

// Update the foundational and global aspects of the page here.

html {
  @include typi-base;

  background-color: palette(gray, darker);
  font-family: $sans;
  font-weight: $sans-normal;
  word-wrap: break-word;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  // Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/.
  box-sizing: inherit;
}

body {
  min-width: 100vw;
  min-height: 100vh;
  background-color: palette(white);
  color: palette(gray, darker);
  overflow-x: hidden;
}

// Limits width on large screens and centers content.
.site {
  max-width: 100rem;
  margin: 0 auto;
}

a {
  border: 0;
  color: inherit;
  text-decoration: none;
}

strong,
.strong {
  font-weight: $serif-bold;
}

dfn,
i,
em,
.em {
  font-style: italic;
}

code,
kbd,
tt,
var,
samp,
pre {
  font-family: $code;
}

pre {
  max-width: 100%;
  margin: 0 0 1.75em;
  padding: 1.75em;
  border: 1px solid palette(gray, light);
  font-size: 1rem;
  line-height: 1.3125;
  white-space: pre-wrap;
  overflow: auto;
  word-wrap: break-word;
}

code {
  padding: 0.125em 0.25em;
  background-color: palette(gray, light);
}

abbr,
acronym {
  border-bottom: 1px dotted palette(gray, light);
  cursor: help;
}

mark {
  padding: 0.125em 0.25em;
  background: palette(orange, light);
  color: #fff;
  text-decoration: none;
}

big {
  font-size: 125%;
}

hr {
  height: 1px;
  margin: 1rem 0;
  border: 0;
  background-color: palette(gray, light);
}

.date {
  display: block;
}

time,
.time {
  @include font(body);

  display: inline-block;
  color: palette(gray);
  font-size: ms(-1);
  line-height: 1;
}
